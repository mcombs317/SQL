/*I used a database containing eleven tables to answer the following questions.

/* 1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT customerid, FirstName, LastName, Country
FROM chinook.customers 
WHERE Country != "USA";

/*2. Show only the Customers from Brazil.
SELECT customerid, FirstName, LastName, Country
FROM chinook.customers 
WHERE Country = "Brazil";

/*3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoiceid, invoicedate, billingcountry
FROM customers
JOIN invoices
ON customers.customerid = invoices.customerid
WHERE billingcountry = "Brazil";

/*4. Show the Employees who are Sales Agents.
SELECT * FROM employees
WHERE title = "Sales Support Agent";

/* 5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT(billingcountry) 
FROM invoices;

/* 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.LastName, invoices.invoiceid  
FROM employees
JOIN customers
ON employees.employeeid = customers.supportrepid
JOIN invoices
ON customers.customerid = invoices.customerid
WHERE title = "Sales Support Agent"

/* 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.total, customers.FirstName, customers.LastName, customers.country, customers.supportrepid 
FROM customers
JOIN invoices 
ON customers.customerid = invoices.customerid

/* 8.  How many Invoices were there in 2009?
SELECT COUNT(invoiceid) 
FROM invoices
WHERE invoicedate LIKE "2009%"

/* 9. What are the total sales for 2009?
SELECT SUM(total) 
FROM invoices
WHERE invoicedate LIKE "2009%"

/* 10.  Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.name, invoice_items.invoicelineid 
FROM tracks
JOIN invoice_items
ON tracks.trackid = invoice_items.trackid;

/* 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.name as Track, invoice_items.InvoiceLineId, artists.Name as Artist
FROM tracks
JOIN invoice_items
ON tracks.trackid = invoice_items.trackid
JOIN albums
ON tracks.AlbumId = albums.AlbumId
JOIN artists
ON artists.artistid = albums.artistid

/* 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.


/* 13. Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, SUM(total) as "Total Sales"
FROM employees
JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.LastName;

/* 14. Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, SUM(total) as total_sales
FROM employees
JOIN customers 
ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE invoices.InvoiceDate LIKE "2009%"
GROUP BY employees.LastName
ORDER BY total_sales desc

/* 15. List the top 10 customers who purchased the most.
SELECT customers.FirstName, customers.LastName, invoices.Total
FROM customers
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
GROUP BY customers.FirstName
ORDER BY invoices.Total desc
LIMIT 10

/* 16.  List the top 10 songs that earned the most revenue.
SELECT trackid, SUM(quantity * invoice_items.unitprice) as revenue, tracks.name
FROM invoice_items
JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
GROUP BY tracks.name
ORDER BY revenue desc
LIMIT 10
